import numpy as np

def conjugate_gradient(A, b, x0=None, tol=1e-10, max_iterations=1000):
    """
    使用共轭梯度法求解线性方程组 Ax = b
    :param A: 对称正定矩阵
    :param b: 向量
    :param x0: 初始解向量
    :param tol: 容忍误差
    :param max_iterations: 最大迭代次数
    :return: 近似解向量x
    """
    if x0 is None:
        x = np.zeros_like(b)
    else:
        x = x0
    r = b - A.dot(x)
    p = r
    rsold = np.dot(r.T, r)

    for i in range(max_iterations):
        Ap = A.dot(p)
        alpha = rsold / np.dot(p.T, Ap)
        x += alpha * p
        r -= alpha * Ap
        rsnew = np.dot(r.T, r)
        if np.sqrt(rsnew) < tol:
            break
        p = r + (rsnew / rsold) * p
        rsold = rsnew
    return x

